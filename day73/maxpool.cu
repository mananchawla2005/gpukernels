#include <cuda_runtime.h>
#include <float.h>    // for FLT_MAX
#include <stddef.h>   // for size_t


__global__
void maxpool2d_kernel(const float* __restrict__ var_d_input,
                      int var_d_H, int var_d_W,
                                            int var_d_kernel_size, int var_d_stride, int var_d_padding, int var_d_dilation,
                                                                  int var_d_H_out, int var_d_W_out,
                                                                                        float* __restrict__ var_d_output)
                                                                                        {

                                                                                            int var_d_out_y = blockIdx.y * blockDim.y + threadIdx.y;
                                                                                                int var_d_out_x = blockIdx.x * blockDim.x + threadIdx.x;
                                                                                                    if (var_d_out_y >= var_d_H_out || var_d_out_x >= var_d_W_out) return;


                                                                                                        float var_d_max_val = -FLT_MAX;
                                                                                                            for (int var_d_m = 0; var_d_m < var_d_kernel_size; ++var_d_m) {
                                                                                                                    int var_d_in_y = var_d_out_y * var_d_stride + var_d_m * var_d_dilation - var_d_padding;
                                                                                                                            for (int var_d_n = 0; var_d_n < var_d_kernel_size; ++var_d_n) {
                                                                                                                                        int var_d_in_x = var_d_out_x * var_d_stride + var_d_n * var_d_dilation - var_d_padding;

                                                                                                                                                    if (var_d_in_y >= 0 && var_d_in_y < var_d_H && var_d_in_x >= 0 && var_d_in_x < var_d_W) {
                                                                                                                                                                    float var_d_v = var_d_input[var_d_in_y * var_d_W + var_d_in_x];
                                                                                                                                                                                    if (var_d_v > var_d_max_val) var_d_max_val = var_d_v;
                                                                                                                                                                                                }
                                                                                                                                                                                                        }
                                                                                                                                                                                                            }
                                                                                                                                                                                                                var_d_output[var_d_out_y * var_d_W_out + var_d_out_x] = var_d_max_val;
                                                                                                                                                                                                                }


                                                                                                                                                                                                                extern "C"
                                                                                                                                                                                                                void solution(const float* var_h_input,
                                                                                                                                                                                                                              int var_h_kernel_size,
                                                                                                                                                                                                                                            int var_h_stride,
                                                                                                                                                                                                                                                          int var_h_padding,
                                                                                                                                                                                                                                                                        int var_h_dilation,
                                                                                                                                                                                                                                                                                      float* var_h_output,
                                                                                                                                                                                                                                                                                                    size_t var_h_H,
                                                                                                                                                                                                                                                                                                                  size_t var_h_W)
                                                                                                                                                                                                                                                                                                                  {

                                                                                                                                                                                                                                                                                                                      int var_h_H_out = (int)(((int)var_h_H + 2 * var_h_padding
                                                                                                                                                                                                                                                                                                                                                   - var_h_dilation * (var_h_kernel_size - 1)
                                                                                                                                                                                                                                                                                                                                                                                - 1) / var_h_stride) + 1;
                                                                                                                                                                                                                                                                                                                                                                                    int var_h_W_out = (int)(((int)var_h_W + 2 * var_h_padding
                                                                                                                                                                                                                                                                                                                                                                                                                 - var_h_dilation * (var_h_kernel_size - 1)
                                                                                                                                                                                                                                                                                                                                                                                                                                              - 1) / var_h_stride) + 1;


                                                                                                                                                                                                                                                                                                                                                                                                                                                  const int var_h_block_x = 16, var_h_block_y = 16;
                                                                                                                                                                                                                                                                                                                                                                                                                                                      dim3 var_h_block(var_h_block_x, var_h_block_y);
                                                                                                                                                                                                                                                                                                                                                                                                                                                          dim3 var_h_grid((var_h_W_out + var_h_block_x - 1) / var_h_block_x,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                              (var_h_H_out + var_h_block_y - 1) / var_h_block_y);

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  maxpool2d_kernel<<<var_h_grid, var_h_block>>>(
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          var_h_input,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  (int)var_h_H, (int)var_h_W,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          var_h_kernel_size, var_h_stride, var_h_padding, var_h_dilation,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  var_h_H_out, var_h_W_out,
var_h_output

}